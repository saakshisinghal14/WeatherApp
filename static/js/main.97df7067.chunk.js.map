{"version":3,"sources":["weather/weatherCard.js","weather/temperature.js","App.js","index.js"],"names":["Weathercard","_ref","temp","humidity","pressure","weathermood","name","speed","country","sunset","_React$useState","React","useState","_React$useState2","Object","slicedToArray","weatherState","setWeatherState","useEffect","date","Date","timeStr","concat","getHours","getMinutes","react_default","a","createElement","Fragment","className","toLocaleString","Temperature","_useState","_useState2","searchValue","setSearchValue","_useState3","_useState4","tempInfo","setTempInfo","getWeatherInfo","asyncToGenerator","regenerator_default","mark","_callee","url","res","data","_data$main","_data$sys","wrap","_context","prev","next","fetch","sent","json","main","weather","wind","sys","t0","console","log","stop","apply","this","arguments","type","placeholder","autoFocus","id","value","onChange","e","target","onClick","weatherCard","App","temperature","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.97df7067.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\n\r\nconst Weathercard = ({\r\n  temp,\r\n  humidity,\r\n  pressure,\r\n  weathermood,\r\n  name,\r\n  speed,\r\n  country,\r\n  sunset,\r\n}) => {\r\n  const [weatherState, setWeatherState] = React.useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (weathermood) {\r\n      switch (weathermood) {\r\n        case \"Clouds\":\r\n          setWeatherState(\"wi-day-cloudy\");\r\n          break;\r\n        case \"Haze\":\r\n          setWeatherState(\"wi-day-haze\");\r\n          break;\r\n        case \"Clear\":\r\n          setWeatherState(\"wi-day-sunny\");\r\n          break;\r\n        case \"Mist\":\r\n          setWeatherState(\"wi-cloudy-windy\");\r\n          break;\r\n        case \"Smoke\":\r\n            setWeatherState(\"wi-dust\");\r\n            break;\r\n        case \"Rain\":\r\n            setWeatherState(\"wi-day-rain\");\r\n            break;\r\n        default:\r\n          setWeatherState(\"wi-cloud\");\r\n          break;\r\n      }\r\n    }\r\n  }, [weathermood]);\r\n\r\n  // converting the seconds into time\r\n  let sec = sunset;\r\n  let date = new Date(sec * 1000);\r\n  let timeStr = `${date.getHours()}:${date.getMinutes()}`;\r\n  return (\r\n    <>\r\n      <article className=\"widget\">\r\n        <div className=\"weatherIcon\">\r\n          <i className={`wi ${weatherState}`}></i>\r\n        </div>\r\n\r\n        <div className=\"weatherInfo\">\r\n          <div className=\"temperature\">\r\n            <span>{temp}&deg;</span>\r\n          </div>\r\n\r\n          <div className=\"description\">\r\n            <div className=\"weatherCondition\">{weathermood}</div>\r\n            <div className=\"place\">\r\n              {name}, {country}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"date\"> {new Date().toLocaleString()} </div>\r\n\r\n        {/* our 4column section  */}\r\n        <div className=\"extra-temp\">\r\n          <div className=\"temp-info-minmax\">\r\n            <div className=\"two-sided-section\">\r\n              <p>\r\n                <i className={\"wi wi-sunset\"}></i>\r\n              </p>\r\n              <p className=\"extra-info-leftside\">\r\n                {timeStr} PM <br />\r\n                Sunset\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"two-sided-section\">\r\n              <p>\r\n                <i className={\"wi wi-humidity\"}></i>\r\n              </p>\r\n              <p className=\"extra-info-leftside\">\r\n                {humidity} <br />\r\n                Humidity\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"weather-extra-info\">\r\n            <div className=\"two-sided-section\">\r\n              <p>\r\n                <i className={\"wi wi-rain\"}></i>\r\n              </p>\r\n              <p className=\"extra-info-leftside\">\r\n                {pressure} <br />\r\n                Pressure\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"two-sided-section\">\r\n              <p>\r\n                <i className={\"wi wi-strong-wind\"}></i>\r\n              </p>\r\n              <p className=\"extra-info-leftside\">\r\n                {speed} <br />\r\n                Speed\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </article>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Weathercard;","\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Weathercard from \"./weatherCard\";\r\nimport \"./style.css\";\r\n\r\nconst Temperature = () => {\r\n  const [searchValue, setSearchValue] = useState(\"New delhi\");\r\n  const [tempInfo, setTempInfo] = useState({});\r\n\r\n  const getWeatherInfo = async () => {\r\n    try {\r\n      let url = `https://api.openweathermap.org/data/2.5/weather?q=${searchValue}&units=metric&appid=e7eb8364e1d9b7362b274c9df411ea44`;\r\n\r\n      let res = await fetch(url);\r\n      let data = await res.json();\r\n\r\n      const { temp, humidity, pressure } = data.main;\r\n      const { main: weathermood } = data.weather[0];\r\n      const { name } = data;\r\n      const { speed } = data.wind;\r\n      const { country, sunset } = data.sys;\r\n\r\n      const myNewWeatherInfo = {\r\n        temp,\r\n        humidity,\r\n        pressure,\r\n        weathermood,\r\n        name,\r\n        speed,\r\n        country,\r\n        sunset,\r\n      };\r\n\r\n      setTempInfo(myNewWeatherInfo);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getWeatherInfo();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"wrap\">\r\n        <div className=\"search\">\r\n          <input\r\n            type=\"search\"\r\n            placeholder=\"Search Your City\"\r\n            autoFocus\r\n            id=\"search\"\r\n            className=\"searchTerm\"\r\n            value={searchValue}\r\n            onChange={(e) => setSearchValue(e.target.value)}\r\n          />\r\n\r\n          <button\r\n            className=\"searchButton\"\r\n            type=\"button\"\r\n            onClick={getWeatherInfo}>\r\n            Search\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* our temp card  */}\r\n      <Weathercard {...tempInfo} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Temperature;","import React from 'react'\nimport Temperature from './weather/temperature'\nconst App = () => {\n\n  return <Temperature/>\n  \n  \n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}